<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>